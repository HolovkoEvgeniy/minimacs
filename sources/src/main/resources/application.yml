spring:
  application:
    name: minimacs

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      max-lifetime: 1800000
      validation-timeout: 3000
      idle-timeout: 600000
      connection-test-query: SELECT 1

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false

  mvc:
    hiddenmethod:
      filter:
        enabled: true

  liquibase:
    enabled: true


server:
  port: ${SERVER_PORT:8090}

management:
  endpoint:
    health:
      show-details: always
    prometheus:
      access: unrestricted
  endpoints:
    web:
      exposure:
        include: prometheus,health
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  health:
    db:
      enabled: true

app:
  admin:
    username: ${APP_ADMIN_USERNAME:admin}
    password: ${APP_ADMIN_PASSWORD:admin}
    email: ${APP_ADMIN_EMAIL:admin@example.com}

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.springframework.web: INFO
    org.springframework.web.reactive: INFO
    org.springframework.web.reactive.function.client: WARN
    reactor.netty: WARN
    org.hibernate: ERROR


mqtt:
  broker:
    url: ${MQTT_BROKER_URL}
  client:
    id: ${MQTT_CLIENT_ID}
  credentials:
    username: ${MQTT_USERNAME}
    password: ${MQTT_PASSWORD}

alert-service:
  token: ${ALERT_SERVICE_TOKEN}